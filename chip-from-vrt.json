{
    "name": "chip-from-vrt",
    "description": "Extract AOIs in a geojson file from imagery on S3. Images can be strips or a FLAME mosaic",
    "properties": {
        "isPublic": true,
        "timeout": 36000
    },
    "inputPortDescriptors": [
        {
            "name": "geojson",
            "type": "directory",
            "description": "Contains one geojson file containing AOIs to extract from the mosaic. If chips are to be used for training each feature must have a class_name property. Features will be saved as feature_id.tif in the output directory. If no feature_id property is present, ids will be generated and saved to the reference gejoson in the output directory.",
            "required": true
        },
        {
            "name": "imagery_location",
            "type": "string",
            "description": "String: location on S3 of the imagery. Note that if the bucket is not public you must enter valid AWS keys and a token to access the imagery. If using a FLAME mosaic this should be the location of the project directory as follows: bucket_name/path/to/project_name/. This directory must contain the a subdirectory with the mosaic tiles and a wms/ subdirectory with a shapefile 'vsitindex_z12.shp'. Otherwise, this should be the exact S3 location of any image strips being used. Different strips should be separated by a comma as follows: 'bucket_name/path/to/image1.tif, bucket_name/path/to.image2.tif', ...",
            "required": true
        },
        {
            "name": "mosaic",
            "type": "string",
            "description": "Bool: True if the imagery is a FLAME mosaic, otherwise the task will expect the imagery_location inputs to be strips. Defaults to False.",
            "required": false
        },
        {
            "name": "aws_access_key",
            "type": "string",
            "description": "String: Amazon AWS access key. The account associated with this key should have read access to the bucket containing the mosaic",
            "required": false
        },
        {
            "name": "aws_secret_key",
            "type": "string",
            "description": "String: Amazon AWS secret access key. The account associated with this key should have read access to the bucket containing the mosaic.",
            "required": false
        },
        {
            "name": "aws_session_token",
            "type": "string",
            "description": "String: Amazon AWS session token. This is necessary if the imagery_location input uses IAM credentials such as is in the gbd_customer_data bucket.",
            "required": false
        },
        {
            "name": "mask",
            "type": "string",
            "description": "Bool: mask the chip by blackfilling any pixels outside of the polygon. If False, the entire bounding box of each polygon is produced. Defaults to False",
            "required": false
        }
    ],
    "outputPortDescriptors": [
        {
            "name": "chips",
            "type": "directory",
            "description": "AOIs from input geojson saved as tifs. Each chips is named after it's feature_id value. A reference geojson file with feature ids for each geometry will also be saved in this directory."
        }
    ],
    "containerDescriptors": [
        {
            "type": "DOCKER",
            "properties": {
                "image": "naldeborgh/chip-from-vrt",
                "domain": "default"
            },
            "command": "python /chip-from-vrt.py",
            "isPublic": true
        }
    ]
}
