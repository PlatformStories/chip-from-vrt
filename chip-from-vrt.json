{
    "name": "chip-from-vrt",
    "version": "0.2.0",
    "description": "A GBDX task for generating AOI chips from a group of images on S3 using the GDAL virtual format. The images can be individual strips or the tiles of a FLAME mosaic.",
    "properties": {
        "isPublic": true,
        "timeout": 36000
    },
    "inputPortDescriptors": [
        {
            "name": "geojson",
            "type": "directory",
            "description": "Contains one geojson file containing AOIs to extract from the mosaic. If chips are to be used for training each feature must have a class_name property. Features will be saved as feature_id.tif in the output directory. If no feature_id property is present, ids will be generated and saved to the reference gejoson in the output directory.",
            "required": true
        },
        {
            "name": "images",
            "type": "string",
            "description": "S3 image locations. Note that if the bucket is private you must enter valid AWS keys and a token to access the imagery. If using a FLAME mosaic this should be the location of the project directory as follows: bucket_name/path/to/project_name/. This directory must contain the a subdirectory with the mosaic tiles and a wms/ subdirectory with a shapefile specified in the shapefile_name input port. Otherwise, this should be the exact S3 location of any image strips being used. Different strips should be separated by a comma as follows: 'bucket_name/path/to/image1.tif, bucket_name/path/to.image2.tif', ...",
            "required": true
        },
        {
            "name": "mosaic",
            "type": "string",

            "description": "True if the images comprise a FLAME mosaic; else False. Defaults to False.",
            "required": false
        },
        {
            "name": "shapefile_location",
            "type": "string",
            "description": "Location of the shapefile pointing to image raster location within the mosaic directory. Only relevant if using a flame mosaic. This file must be in the project directory. Defaults to wms/vsitindex_z12.shp.",
            "required": false
        },
        {
            "name": "aws_access_key",
            "type": "string",
            "description": "AWS access key. The account associated with this key should have read access to the bucket containing the mosaic.",
            "required": false
        },
        {
            "name": "aws_secret_key",
            "type": "string",
            "description": "AWS secret access key. The account associated with this key should have read access to the bucket containing the mosaic.",
            "required": false
        },
        {
            "name": "aws_session_token",
            "type": "string",
            "description": "AWS session token. This is necessary if the images input uses IAM credentials such as is in the gbd_customer_data bucket.",
            "required": false
        },
        {
            "name": "mask",
            "type": "string",
            "description": "If True, blackfill pixels outside the polygon. Otherwise entire bounding box will be included in the output chip. Defaults to False.",
            "required": false
        },
        {
            "name": "bit_depth",
            "type": "string",
            "description": "Bit depth to set the output chips to if larger than 8. Defaults to 8.",
            "required": false
        },
        {
            "name": "bands",
            "type": "string",
            "description": "List of bands to include in the chips, each separated by a comma. Note that indexing starts at 1. For example, to use the first three bands use input '1,2,3'. Defaults to all bands.",
            "required": false
        },
        {
          "name": "tar",
          "type": "string",
          "description": "If True, outputs chips directory as a tar file. Defaults to False",
          "required": false
        }
    ],
    "outputPortDescriptors": [
        {
            "name": "chips",
            "type": "directory",
            "description": "Contains chipped AOIs from input geojson in tif format. Each chip is named after its feature_id value. A reference geojson file with feature ids for each geometry is also saved in this directory."
        }
    ],
    "containerDescriptors": [
        {
            "type": "DOCKER",
            "properties": {
                "image": "platformstories/chip-from-vrt",
                "domain": "default"
            },
            "command": "python /chip-from-vrt.py",
            "isPublic": true
        }
    ]
}
